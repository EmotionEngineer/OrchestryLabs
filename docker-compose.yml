services:
  init-hub:
    image: "postgres:14"
    container_name: init-jupyterhub
    depends_on:
      - postgres
    networks:
      - jupyterhub-network
    volumes:
      - "jupyterhub-data:/data"
      - "./pg_init.sh:/data/pg_init.sh"
    env_file:
      .env
    command: ["sh", "/data/pg_init.sh"]

  hub:
    build:
      context: .
      dockerfile: GoodDockerfile
      args:
        JUPYTERHUB_VERSION: 4.1.5
    container_name: jupyterhub
    restart: always
    depends_on:
      - postgres
      - init-hub
    networks:
      - jupyterhub-network
    volumes:
      - "./config.py:/srv/jupyterhub/config.py:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
      - "jupyterhub-data:/data"
    ports:
      - "8000:8000"
    env_file:
      .env
    entrypoint: ["jupyterhub"]
    command: ["-f", "/srv/jupyterhub/config.py", "--log-level=DEBUG"]

  postgres:
    image: "postgres:14"
    container_name: postgres
    networks:
      - jupyterhub-network
    env_file:
      .env
    healthcheck:
      test: ["CMD", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3

volumes:
  jupyterhub-data:

networks:
  jupyterhub-network:
    name: jupyterhub-network

apiVersion: v1
kind: ConfigMap
metadata:
  name: api-app-config
  labels:
    app: api-app
data:
  APP_ENV: "local"
  DB_HOST: "pg_host"
  DB_NAME: "mydb"
  DB_USER: "postgres"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-app
  labels:
    app: api-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-app
  template:
    metadata:
      labels:
        app: api-app
    spec:
      initContainers:
      - name: init-config
        image: busybox
        command: ['sh', '-c', 'echo Init container started; sleep 5']
      containers:
      - name: api-app
        image: crakr/api:latest
        ports:
        - containerPort: 7777
        env:
        - name: APP_ENV
          valueFrom:
            configMapKeyRef:
              name: api-app-config
              key: APP_ENV
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: api-app-config
              key: DB_HOST
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: api-app-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: api-app-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: DB_PASSWORD
        livenessProbe:
          httpGet:
            path: /
            port: 7777
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 7777
          initialDelaySeconds: 5
          periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: api-app-service
  labels:
    app: api-app
spec:
  selector:
    app: api-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 7777
  type: LoadBalancer
